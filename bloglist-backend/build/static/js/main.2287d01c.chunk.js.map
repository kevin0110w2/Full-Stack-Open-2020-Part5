{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","setErrorMessage","setTitle","setAuthor","url","setURL","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","console","log","loginService","setItem","stringify","setTimeout","handleLogout","removeItem","handleAddBlog","newBlog","blogForm","onSubmit","type","value","name","onChange","target","map","key","ReactDOM","render","document","getElementById"],"mappings":"2OAOeA,EANF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,6BACGA,EAAKC,MADR,IACgBD,EAAKE,S,gBCAnBC,EAAQ,KAyBG,GAAEC,OAnBF,WAEb,OADgBC,IAAMC,IATR,cAUCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAiBlBC,OAdb,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeZ,IAFf,SAKUE,IAAMW,KAlBf,aAkB6BL,EAAWE,GALzC,cAKPL,EALO,yBAMNA,EAASC,MANH,2CAAH,sDAcqBQ,OALlB,SAACC,EAAIP,GAElB,OADgBN,IAAMc,IAAN,UAvBF,aAuBE,aAA2BD,GAAMP,GAClCJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAGFW,SAvBxB,SAAAC,GACflB,EAAK,iBAAakB,KCEL,GAAEC,MALN,uCAAG,WAAMC,GAAN,eAAAX,EAAA,sEACWP,IAAMW,KAHf,aAG6BO,GAD/B,cACNf,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCyKIe,EAvKH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEgBF,mBAAS,IAFzB,mBAETG,EAFS,KAECC,EAFD,OAGgBJ,mBAAS,IAHzB,mBAGTK,EAHS,KAGCC,EAHD,OAIQN,mBAAS,MAJjB,mBAITO,EAJS,KAIHC,EAJG,OAKwBR,mBAAS,IALjC,mBAKKS,GALL,aAMUT,mBAAS,IANnB,mBAMTxB,EANS,KAMFkC,EANE,OAOYV,mBAAS,IAPrB,mBAOTvB,EAPS,KAODkC,EAPC,OAQMX,mBAAS,IARf,mBAQTY,EARS,KAQJC,EARI,KAUhBC,qBAAU,WACRC,EAAYpC,SAASG,MAAK,SAAAmB,GAAK,OAC7BC,EAASD,QAEV,IAEHa,qBAAU,WACR,IAAME,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAIH,EAAgB,CAClB,IAAMT,EAAOa,KAAKC,MAAML,GACxBR,EAAQD,GACRQ,EAAYpB,SAASY,EAAK7B,UAE3B,IAEH,IAAM4C,EAAW,uCAAG,WAAOC,GAAP,eAAApC,EAAA,6DAClBoC,EAAMC,iBACNC,QAAQC,IAAI,kBAAmBvB,EAAUE,GAFvB,kBAIGsB,EAAa9B,MAAM,CACpCM,WAAUE,aALI,OAIVE,EAJU,OAQhBU,OAAOC,aAAaU,QAClB,oBAAqBR,KAAKS,UAAUtB,IAEtCkB,QAAQC,IAAIT,OAAOC,aAAaC,QAAQ,sBACxCJ,EAAYpB,SAASY,EAAK7B,OAC1B8B,EAAQD,GACRH,EAAY,IACZE,EAAY,IAfI,kDAiBhBG,EAAgB,qBAChBqB,YAAW,WACTrB,EAAgB,QACf,KApBa,0DAAH,sDAwBXsB,EAAY,uCAAG,WAAOR,GAAP,SAAApC,EAAA,sDACnBoC,EAAMC,iBACNC,QAAQC,IAAI,mBAAoBnB,EAAKJ,SAAUI,EAAKF,UACpDY,OAAOC,aAAac,WAAW,qBAC/BxB,EAAQ,MACRJ,EAAY,IACZE,EAAY,IANO,2CAAH,sDASZ2B,EAAa,uCAAG,WAAOV,GAAP,eAAApC,EAAA,6DACpBoC,EAAMC,iBACNC,QAAQC,IAAI,cAAelD,EAAOC,EAAQmC,GAEpCsB,EAAU,CACd1D,MAAOA,EACPC,OAAQA,EACRmC,IAAKA,GAPa,kBAUZG,EAAY9B,OAAO,CAAEiD,YAVT,OAWlBxB,EAAS,IACTC,EAAU,IACVE,EAAO,IAbW,kDAelBJ,EAAgB,sBAChBqB,YAAW,WACTrB,EAAgB,QACf,KAlBe,0DAAH,sDA+Db0B,EAAW,kBACf,6BACE,0CACA,0BAAMC,SAAUH,GACd,sCAEA,2BACII,KAAK,OACLC,MAAO9D,EACP+D,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB/B,EAAS+B,EAAOH,WAG9C,uCAEA,2BACID,KAAK,OACLC,MAAO7D,EACP8D,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB9B,EAAU8B,EAAOH,WAG/C,oCAEA,2BACID,KAAK,MACLC,MAAO1B,EACP2B,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB5B,EAAO4B,EAAOH,WAG5C,4BAAQD,KAAK,UAAb,aAKN,OACE,6BAGY,OAAT9B,EAhFH,6BACE,qDACA,0BAAM6B,SAAUd,GACd,wCAEE,2BACEe,KAAK,OACLC,MAAOnC,EACPoC,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBrC,EAAYqC,EAAOH,WAGjD,wCAEE,2BACED,KAAK,WACLC,MAAOjC,EACPkC,KAAK,WACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBnC,EAAYmC,EAAOH,WAGjD,4BAAQD,KAAK,UAAb,WAMJ,6BACE,qCACA,2BAAI9B,EAAKgC,KAAT,cACA,0BAAMH,SAAUL,GACd,4BAAQM,KAAK,UAAb,WAEDF,IACAlC,EAAMyC,KAAI,SAAAnE,GAAI,OACb,kBAAC,EAAD,CAAMoE,IAAKpE,EAAKkB,GAAIlB,KAAMA,UCrHlCqE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2287d01c.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, setToken }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setURL] = useState('')\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs(blogs)\r\n    )\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    console.log('logging in with', username, password)\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      )\r\n      console.log(window.localStorage.getItem('loggedBlogappUser'))\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('Wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleLogout = async (event) => {\r\n    event.preventDefault()\r\n    console.log('logging out with', user.username, user.password)\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    setUser(null)\r\n    setUsername('')\r\n    setPassword('')\r\n  }\r\n\r\n  const handleAddBlog = async (event) => {\r\n    event.preventDefault()\r\n    console.log('adding Blog', title, author, url)\r\n\r\n    const newBlog = {\r\n      title: title,\r\n      author: author,\r\n      url: url,\r\n    }\r\n    try {\r\n      await blogService.create({ newBlog })\r\n      setTitle('')\r\n      setAuthor('')\r\n      setURL('')\r\n    } catch (exception) {\r\n      setErrorMessage('Invalid blog deetz')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <div>\r\n      <h2>log in to application</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <div>\r\n          username\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            name=\"Username\"\r\n            onChange={({ target }) => setUsername(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          password\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            name=\"Password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n  const welcomeScreen = () => (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <p>{user.name} logged in</p>\r\n      <form onSubmit={handleLogout}>\r\n        <button type=\"submit\">logout</button>\r\n      </form>\r\n      {blogForm()}\r\n      {blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} />\r\n      )}\r\n    </div>\r\n  )\r\n\r\n  const blogForm = () => (\r\n    <div>\r\n      <h2>create new</h2>\r\n      <form onSubmit={handleAddBlog}>\r\n        <div>\r\n          title:\r\n        <input\r\n            type=\"text\"\r\n            value={title}\r\n            name=\"Username\"\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          author:\r\n        <input\r\n            type=\"text\"\r\n            value={author}\r\n            name=\"Password\"\r\n            onChange={({ target }) => setAuthor(target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          url:\r\n        <input\r\n            type=\"url\"\r\n            value={url}\r\n            name=\"Password\"\r\n            onChange={({ target }) => setURL(target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">create</button>\r\n      </form>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {/* <Notification message={errorMessage} /> */}\r\n\r\n      {user === null ? loginForm() : welcomeScreen()}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}